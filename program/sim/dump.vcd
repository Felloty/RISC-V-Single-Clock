$date
	Wed Jun 14 06:08:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ! \rf[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 " \rf[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 # \rf[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 $ \rf[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 % \rf[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 & \rf[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ' \rf[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ( \rf[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ) \rf[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 * \rf[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 + \rf[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 , \rf[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 - \rf[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 . \rf[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 / \rf[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 0 \rf[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 1 \rf[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 2 \rf[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 3 \rf[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 4 \rf[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 5 \rf[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 6 \rf[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 7 \rf[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 8 \rf[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 9 \rf[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 : \rf[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ; \rf[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 < \rf[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 = \rf[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 > \rf[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 ? \rf[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module top_entity $end
$scope module cpu_entity $end
$scope module register_file_instance $end
$var reg 32 @ \rf[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module testbench $end
$var reg 1 A clk $end
$var reg 1 B rst_n $end
$var integer 32 C cycle [31:0] $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$scope begin genblk1[16] $end
$upscope $end
$scope begin genblk1[17] $end
$upscope $end
$scope begin genblk1[18] $end
$upscope $end
$scope begin genblk1[19] $end
$upscope $end
$scope begin genblk1[20] $end
$upscope $end
$scope begin genblk1[21] $end
$upscope $end
$scope begin genblk1[22] $end
$upscope $end
$scope begin genblk1[23] $end
$upscope $end
$scope begin genblk1[24] $end
$upscope $end
$scope begin genblk1[25] $end
$upscope $end
$scope begin genblk1[26] $end
$upscope $end
$scope begin genblk1[27] $end
$upscope $end
$scope begin genblk1[28] $end
$upscope $end
$scope begin genblk1[29] $end
$upscope $end
$scope begin genblk1[30] $end
$upscope $end
$scope begin genblk1[31] $end
$upscope $end
$scope module top_entity $end
$var wire 1 A clk $end
$var wire 4 D clkDivide [3:0] $end
$var wire 1 E clkEnable $end
$var wire 5 F regAddress [4:0] $end
$var wire 1 B rst $end
$var wire 32 G regData [31:0] $end
$var wire 5 H regAddr [4:0] $end
$var wire 1 I enable $end
$var wire 4 J divide [3:0] $end
$var wire 1 K clkOut $end
$scope module cpu_clk_div $end
$var wire 1 A clk $end
$var wire 1 K clkOut $end
$var wire 1 B rst $end
$var wire 1 I enable $end
$var wire 4 L divide [3:0] $end
$var reg 32 M cntr [31:0] $end
$upscope $end
$scope module cpu_entity $end
$var wire 1 K clk $end
$var wire 32 N instruction_address [31:0] $end
$var wire 1 B rst $end
$var wire 1 O write_enable_rd $end
$var wire 1 P write_enable_mem $end
$var wire 32 Q write_data_rd_2 [31:0] $end
$var wire 32 R write_data_rd_1 [31:0] $end
$var wire 1 S wdMux $end
$var wire 5 T rs2 [4:0] $end
$var wire 5 U rs1 [4:0] $end
$var wire 2 V resultMux [1:0] $end
$var wire 32 W result [31:0] $end
$var wire 32 X regData [31:0] $end
$var wire 5 Y regAddress [4:0] $end
$var wire 32 Z read_data [31:0] $end
$var wire 32 [ rd2 [31:0] $end
$var wire 32 \ rd1 [31:0] $end
$var wire 32 ] rd0 [31:0] $end
$var wire 5 ^ rd [4:0] $end
$var wire 32 _ pcPlus4 [31:0] $end
$var wire 32 ` pcNext [31:0] $end
$var wire 2 a pcMux [1:0] $end
$var wire 32 b pcBranch_2 [31:0] $end
$var wire 32 c pcBranch_1 [31:0] $end
$var wire 32 d pc [31:0] $end
$var wire 32 e opB [31:0] $end
$var wire 32 f instruction_data [31:0] $end
$var wire 32 g immU [31:0] $end
$var wire 32 h immS [31:0] $end
$var wire 32 i immJ [31:0] $end
$var wire 32 j immI [31:0] $end
$var wire 32 k immB [31:0] $end
$var wire 7 l cmdOp [6:0] $end
$var wire 7 m cmdF7 [6:0] $end
$var wire 3 n cmdF3 [2:0] $end
$var wire 1 o aluZero $end
$var wire 2 p aluMux [1:0] $end
$var wire 4 q aluControl [3:0] $end
$scope module arithmetic_logic_unit_instance $end
$var wire 32 r opB [31:0] $end
$var wire 1 o zero $end
$var wire 32 s opA [31:0] $end
$var wire 4 t control [3:0] $end
$var reg 32 u result [31:0] $end
$upscope $end
$scope module control_unit_instance $end
$var wire 1 o aluZero $end
$var wire 2 v pcMux [1:0] $end
$var wire 7 w cmdOp [6:0] $end
$var wire 7 x cmdF7 [6:0] $end
$var wire 3 y cmdF3 [2:0] $end
$var reg 4 z aluControl [3:0] $end
$var reg 2 { aluMux [1:0] $end
$var reg 1 | branch $end
$var reg 1 } condJump $end
$var reg 1 ~ condZero $end
$var reg 2 !" resultMux [1:0] $end
$var reg 1 S wdMux $end
$var reg 1 P write_enable_mem $end
$var reg 1 O write_enable_rd $end
$upscope $end
$scope module data_memory_instance $end
$var wire 1 K clk $end
$var wire 32 "" data_address [31:0] $end
$var wire 32 #" read_data [31:0] $end
$var wire 1 P write_enable $end
$var wire 32 $" write_data [31:0] $end
$upscope $end
$scope module instruction_decoder_instance $end
$var wire 5 %" rs2 [4:0] $end
$var wire 5 &" rs1 [4:0] $end
$var wire 5 '" rd [4:0] $end
$var wire 32 (" instr [31:0] $end
$var wire 7 )" cmdOp [6:0] $end
$var wire 7 *" cmdF7 [6:0] $end
$var wire 3 +" cmdF3 [2:0] $end
$var reg 32 ," immB [31:0] $end
$var reg 32 -" immI [31:0] $end
$var reg 32 ." immJ [31:0] $end
$var reg 32 /" immS [31:0] $end
$var reg 32 0" immU [31:0] $end
$upscope $end
$scope module instruction_memory_instance $end
$var wire 32 1" instruction_address [31:0] $end
$var wire 32 2" instruction_data [31:0] $end
$upscope $end
$scope module program_counter_instance $end
$var wire 32 3" D [31:0] $end
$var wire 1 K clk $end
$var wire 1 B rst $end
$var reg 32 4" Q [31:0] $end
$upscope $end
$scope module register_file_instance $end
$var wire 1 K clk $end
$var wire 5 5" rd [4:0] $end
$var wire 5 6" rs1 [4:0] $end
$var wire 5 7" rs2 [4:0] $end
$var wire 32 8" write_data [31:0] $end
$var wire 1 O write_enable $end
$var wire 5 9" rs0 [4:0] $end
$var wire 32 :" rd2 [31:0] $end
$var wire 32 ;" rd1 [31:0] $end
$var wire 32 <" rd0 [31:0] $end
$upscope $end
$upscope $end
$scope module meta_deb1 $end
$var wire 1 E D $end
$var wire 1 A clk $end
$var wire 1 B rst $end
$var reg 1 I Q $end
$var reg 1 =" data $end
$upscope $end
$scope module meta_deb4 $end
$var wire 4 >" D [3:0] $end
$var wire 1 A clk $end
$var wire 1 B rst $end
$var reg 4 ?" Q [3:0] $end
$var reg 4 @" data [3:0] $end
$upscope $end
$scope module meta_deb5 $end
$var wire 5 A" D [4:0] $end
$var wire 1 A clk $end
$var wire 1 B rst $end
$var reg 5 B" Q [4:0] $end
$var reg 5 C" data [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 C"
b0 B"
bz A"
b0 @"
b0 ?"
bz >"
0="
b0 <"
b0 ;"
bx :"
b0 9"
b1000 8"
b1000 7"
b0 6"
b1011 5"
b0 4"
b100 3"
b100000000000010110010011 2"
b0 1"
b100000000000000000000000 0"
b1011 /"
b1000 ."
b1000 -"
b100000001010 ,"
b0 +"
b0 *"
b10011 )"
b100000000000010110010011 ("
b1011 '"
b0 &"
b1000 %"
bx $"
bx #"
b1000 ""
b10 !"
0~
0}
0|
b1 {
b0 z
b0 y
b0 x
b10011 w
b0 v
b1000 u
b0 t
b0 s
b1000 r
b0 q
b1 p
0o
b0 n
b0 m
b10011 l
b100000001010 k
b1000 j
b1000 i
b1011 h
b100000000000000000000000 g
b100000000000010110010011 f
b1000 e
b0 d
b100000001010 c
b1000 b
b0 a
b100 `
b100 _
b1011 ^
b0 ]
b0 \
bx [
bx Z
b0 Y
b0 X
b1000 W
b10 V
b0 U
b1000 T
0S
b1000 R
b1000 Q
0P
1O
b0 N
b0 M
b0 L
0K
b0 J
0I
b0 H
b0 G
bz F
zE
bz D
b0 C
0B
0A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#100
b1000 ,
b1 C
1K
1A
#200
0K
0A
#300
b1000 ,
b10 C
1K
1A
#400
0K
0A
#500
b1000 ,
b11 C
1K
1A
#600
0K
0A
#700
b111 Q
b111 8"
b111 R
b111 W
b111 u
b111 ""
b111 e
b111 r
b1000 `
b1000 3"
b1100 ^
b1100 '"
b1100 5"
b111 T
b111 %"
b111 7"
b111 j
b111 -"
b1100 h
b1100 /"
b1100 k
b1100 ,"
b11100000000000000000000 g
b11100000000000000000000 0"
b100000000110 i
b100000000110 ."
b100 G
b100 X
b11100000000011000010011 f
b11100000000011000010011 ("
b11100000000011000010011 2"
b1000 ,
b1000 _
b100000001010 b
b10000 c
b100 N
b100 1"
b100 d
b100 4"
bz @"
z="
bz C"
b100 C
1B
1K
1A
#800
0K
0A
#900
b1100 Q
b1100 8"
b1100 R
b1010100 W
b1010100 u
b1010100 ""
b1001100 e
b1001100 r
b111 [
b111 $"
b111 :"
b1000 \
b1000 s
b1000 ;"
1P
b0 V
b0 !"
b10 p
b10 {
0O
b1100 `
b1100 3"
b1100 T
b1100 %"
b1100 7"
b1011 U
b1011 &"
b1011 6"
b10 m
b10 x
b10 *"
b10 n
b10 y
b10 +"
b100011 l
b100011 w
b100011 )"
b1011010000001001100 i
b1011010000001001100 ."
b100110001011010000000000000 g
b100110001011010000000000000 0"
b1001100 k
b1001100 ,"
b1001100 h
b1001100 /"
b1001100 j
b1001100 -"
b100110001011010011000100011 f
b100110001011010011000100011 ("
b100110001011010011000100011 2"
bx ]
bx <"
bx G
bx X
b111 -
b1100 _
b1011010000001010100 b
b1010100 c
b1000 N
b1000 1"
b1000 d
b1000 4"
bz H
bz Y
bz 9"
bz B"
zI
bz J
bz L
bz ?"
b101 C
1K
1A
#1000
0K
0A
#1100
b1111 W
b1111 u
b1111 ""
b1000 e
b1000 r
b1111 Q
b1111 8"
b1000 [
b1000 $"
b1000 :"
b111 \
b111 s
b111 ;"
b10 V
b10 !"
1O
b0 p
b0 {
0P
b1111 R
b10000 `
b10000 3"
b1010 ^
b1010 '"
b1010 5"
b1011 T
b1011 %"
b1011 7"
b1100 U
b1100 &"
b1100 6"
b0 m
b0 x
b0 *"
b0 n
b0 y
b0 +"
b110011 l
b110011 w
b110011 )"
b1011 j
b1011 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b101101100000000000000000 g
b101101100000000000000000 0"
b1100000100000001010 i
b1100000100000001010 ."
b101101100000010100110011 f
b101101100000010100110011 ("
b101101100000010100110011 2"
bx Z
bx #"
b10000 _
b1100000100000010110 b
b10110 c
b1100 N
b1100 1"
b1100 d
b1100 4"
b110 C
1K
1A
#1200
0K
0A
#1300
b11111111111111111111111111111111 Q
b11111111111111111111111111111111 8"
b11111111111111111111111111111111 R
b11111111111111111111111111111111 W
b11111111111111111111111111111111 u
b11111111111111111111111111111111 ""
b1 q
b1 t
b1 z
b10 V
b10 !"
1O
b10100 `
b10100 3"
b100000 m
b100000 x
b100000 *"
b1100000110000001010 i
b1100000110000001010 ."
b1000000101101100000000000000000 g
b1000000101101100000000000000000 0"
b10000001010 k
b10000001010 ,"
b10000001010 h
b10000001010 /"
b10000001011 j
b10000001011 -"
b1000000101101100000010100110011 f
b1000000101101100000010100110011 ("
b1000000101101100000010100110011 2"
b1111 +
b10100 _
b1100000110000011010 b
b10000011010 c
b10000 N
b10000 1"
b10000 d
b10000 4"
b111 C
1K
1A
#1400
0K
0A
#1500
b1111 Q
b1111 8"
b1111 R
b1111 W
b1111 u
b1111 ""
b10 q
b10 t
b10 z
b10 V
b10 !"
1O
b11000 `
b11000 3"
b0 m
b0 x
b0 *"
b100 n
b100 y
b100 +"
b1011 j
b1011 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b101101100100000000000000 g
b101101100100000000000000 0"
b1100100100000001010 i
b1100100100000001010 ."
b101101100100010100110011 f
b101101100100010100110011 ("
b101101100100010100110011 2"
b11111111111111111111111111111111 +
b11000 _
b1100100100000011110 b
b11110 c
b10100 N
b10100 1"
b10100 d
b10100 4"
b1000 C
1K
1A
#1600
0K
0A
#1700
b11 q
b11 t
b11 z
b10 V
b10 !"
1O
b11100 `
b11100 3"
b110 n
b110 y
b110 +"
b1100110100000001010 i
b1100110100000001010 ."
b101101100110000000000000 g
b101101100110000000000000 0"
b101101100110010100110011 f
b101101100110010100110011 ("
b101101100110010100110011 2"
b1111 +
b11100 _
b1100110100000100010 b
b100010 c
b11000 N
b11000 1"
b11000 d
b11000 4"
b1001 C
1K
1A
#1800
0K
0A
#1900
b0 Q
b0 8"
b0 R
1o
b0 W
b0 u
b0 ""
b100 q
b100 t
b100 z
b10 V
b10 !"
1O
b100000 `
b100000 3"
b111 n
b111 y
b111 +"
b101101100111000000000000 g
b101101100111000000000000 0"
b1100111100000001010 i
b1100111100000001010 ."
b101101100111010100110011 f
b101101100111010100110011 ("
b101101100111010100110011 2"
b1111 +
b100000 _
b1100111100000100110 b
b100110 c
b11100 N
b11100 1"
b11100 d
b11100 4"
b1010 C
1K
1A
#2000
0K
0A
#2100
b11100000000 Q
b11100000000 8"
b11100000000 R
0o
b11100000000 W
b11100000000 u
b11100000000 ""
b101 q
b101 t
b101 z
b10 V
b10 !"
1O
b100100 `
b100100 3"
b1 n
b1 y
b1 +"
b1100001100000001010 i
b1100001100000001010 ."
b101101100001000000000000 g
b101101100001000000000000 0"
b101101100001010100110011 f
b101101100001010100110011 ("
b101101100001010100110011 2"
b0 +
b100100 _
b1100001100000101010 b
b101010 c
b100000 N
b100000 1"
b100000 d
b100000 4"
b1011 C
1K
1A
#2200
0K
0A
#2300
b0 Q
b0 8"
b0 R
1o
b0 W
b0 u
b0 ""
b110 q
b110 t
b110 z
b10 V
b10 !"
1O
b101000 `
b101000 3"
b101 n
b101 y
b101 +"
b101101100101000000000000 g
b101101100101000000000000 0"
b1100101100000001010 i
b1100101100000001010 ."
b101101100101010100110011 f
b101101100101010100110011 ("
b101101100101010100110011 2"
b11100000000 +
b101000 _
b1100101100000101110 b
b101110 c
b100100 N
b100100 1"
b100100 d
b100100 4"
b1100 C
1K
1A
#2400
0K
0A
#2500
b111 q
b111 t
b111 z
b10 V
b10 !"
1O
b101100 `
b101100 3"
b100000 m
b100000 x
b100000 *"
b1100101110000001010 i
b1100101110000001010 ."
b1000000101101100101000000000000 g
b1000000101101100101000000000000 0"
b10000001010 k
b10000001010 ,"
b10000001010 h
b10000001010 /"
b10000001011 j
b10000001011 -"
b1000000101101100101010100110011 f
b1000000101101100101010100110011 ("
b1000000101101100101010100110011 2"
b0 +
b101100 _
b1100101110000110010 b
b10000110010 c
b101000 N
b101000 1"
b101000 d
b101000 4"
b1101 C
1K
1A
#2600
0K
0A
#2700
b1 Q
b1 8"
b1 R
0o
b1 W
b1 u
b1 ""
b1000 q
b1000 t
b1000 z
b10 V
b10 !"
1O
b110000 `
b110000 3"
b0 m
b0 x
b0 *"
b10 n
b10 y
b10 +"
b1011 j
b1011 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b101101100010000000000000 g
b101101100010000000000000 0"
b1100010100000001010 i
b1100010100000001010 ."
b101101100010010100110011 f
b101101100010010100110011 ("
b101101100010010100110011 2"
b0 +
b110000 _
b1100010100000110110 b
b110110 c
b101100 N
b101100 1"
b101100 d
b101100 4"
b1110 C
1K
1A
#2800
0K
0A
#2900
b1001 q
b1001 t
b1001 z
b10 V
b10 !"
1O
b110100 `
b110100 3"
b11 n
b11 y
b11 +"
b1100011100000001010 i
b1100011100000001010 ."
b101101100011000000000000 g
b101101100011000000000000 0"
b101101100011010100110011 f
b101101100011010100110011 ("
b101101100011010100110011 2"
b1 +
b110100 _
b1100011100000111010 b
b111010 c
b110000 N
b110000 1"
b110000 d
b110000 4"
b1111 C
1K
1A
#3000
0K
0A
#3100
b1010 Q
b1010 8"
b1010 R
b10 e
b10 r
0o
b1010 W
b1010 u
b1010 ""
bx [
bx $"
bx :"
b1000 \
b1000 s
b1000 ;"
b1 p
b1 {
b10 q
b10 t
b10 z
b10 V
b10 !"
1O
b111000 `
b111000 3"
b10 T
b10 %"
b10 7"
b1011 U
b1011 &"
b1011 6"
b100 n
b100 y
b100 +"
b10011 l
b10011 w
b10011 )"
b10 j
b10 -"
b1001011100000000000000 g
b1001011100000000000000 0"
b1011100000000000010 i
b1011100000000000010 ."
b1001011100010100010011 f
b1001011100010100010011 ("
b1001011100010100010011 2"
b1 +
b111000 _
b1011100000000110110 b
b111110 c
b110100 N
b110100 1"
b110100 d
b110100 4"
b10000 C
1K
1A
#3200
0K
0A
#3300
b11 q
b11 t
b11 z
b10 V
b10 !"
b1 p
b1 {
1O
b111100 `
b111100 3"
b110 n
b110 y
b110 +"
b1011110000000000010 i
b1011110000000000010 ."
b1001011110000000000000 g
b1001011110000000000000 0"
b1001011110010100010011 f
b1001011110010100010011 ("
b1001011110010100010011 2"
b1010 +
b111100 _
b1011110000000111010 b
b1000010 c
b111000 N
b111000 1"
b111000 d
b111000 4"
b10001 C
1K
1A
#3400
0K
0A
#3500
b0 Q
b0 8"
b0 R
1o
b0 W
b0 u
b0 ""
b100 q
b100 t
b100 z
b10 V
b10 !"
b1 p
b1 {
1O
b1000000 `
b1000000 3"
b111 n
b111 y
b111 +"
b1001011111000000000000 g
b1001011111000000000000 0"
b1011111000000000010 i
b1011111000000000010 ."
b1001011111010100010011 f
b1001011111010100010011 ("
b1001011111010100010011 2"
b1010 +
b1000000 _
b1011111000000111110 b
b1000110 c
b111100 N
b111100 1"
b111100 d
b111100 4"
b10010 C
1K
1A
#3600
0K
0A
#3700
b100000 Q
b100000 8"
b100000 R
0o
b100000 W
b100000 u
b100000 ""
b101 q
b101 t
b101 z
b10 V
b10 !"
b1 p
b1 {
1O
b1000100 `
b1000100 3"
b1 n
b1 y
b1 +"
b1011001000000000010 i
b1011001000000000010 ."
b1001011001000000000000 g
b1001011001000000000000 0"
b1001011001010100010011 f
b1001011001010100010011 ("
b1001011001010100010011 2"
b0 +
b1000100 _
b1011001000001000010 b
b1001010 c
b1000000 N
b1000000 1"
b1000000 d
b1000000 4"
b10011 C
1K
1A
#3800
0K
0A
#3900
b10 Q
b10 8"
b10 R
b10 W
b10 u
b10 ""
b110 q
b110 t
b110 z
b10 V
b10 !"
b1 p
b1 {
1O
b1001000 `
b1001000 3"
b101 n
b101 y
b101 +"
b1001011101000000000000 g
b1001011101000000000000 0"
b1011101000000000010 i
b1011101000000000010 ."
b1001011101010100010011 f
b1001011101010100010011 ("
b1001011101010100010011 2"
b100000 +
b1001000 _
b1011101000001000110 b
b1001110 c
b1000100 N
b1000100 1"
b1000100 d
b1000100 4"
b10100 C
1K
1A
#4000
0K
0A
#4100
b10000000010 e
b10000000010 r
b111 q
b111 t
b111 z
b10 V
b10 !"
b1 p
b1 {
1O
b1001100 `
b1001100 3"
b100000 m
b100000 x
b100000 *"
b1011101010000000010 i
b1011101010000000010 ."
b1000000001001011101000000000000 g
b1000000001001011101000000000000 0"
b10000001010 k
b10000001010 ,"
b10000001010 h
b10000001010 /"
b10000000010 j
b10000000010 -"
b1000000001001011101010100010011 f
b1000000001001011101010100010011 ("
b1000000001001011101010100010011 2"
b10 +
b1001100 _
b1011101010001001010 b
b10001010010 c
b1001000 N
b1001000 1"
b1001000 d
b1001000 4"
b10101 C
1K
1A
#4200
0K
0A
#4300
b0 Q
b0 8"
b0 R
1o
b0 W
b0 u
b0 ""
b10 e
b10 r
b1000 q
b1000 t
b1000 z
b10 V
b10 !"
b1 p
b1 {
1O
b1010000 `
b1010000 3"
b0 m
b0 x
b0 *"
b10 n
b10 y
b10 +"
b10 j
b10 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b1001011010000000000000 g
b1001011010000000000000 0"
b1011010000000000010 i
b1011010000000000010 ."
b1001011010010100010011 f
b1001011010010100010011 ("
b1001011010010100010011 2"
b10 +
b1010000 _
b1011010000001001110 b
b1010110 c
b1001100 N
b1001100 1"
b1001100 d
b1001100 4"
b10110 C
1K
1A
#4400
0K
0A
#4500
b1001 q
b1001 t
b1001 z
b10 V
b10 !"
b1 p
b1 {
1O
b1010100 `
b1010100 3"
b11 n
b11 y
b11 +"
b1011011000000000010 i
b1011011000000000010 ."
b1001011011000000000000 g
b1001011011000000000000 0"
b1001011011010100010011 f
b1001011011010100010011 ("
b1001011011010100010011 2"
b0 +
b1010100 _
b1011011000001010010 b
b1011010 c
b1010000 N
b1010000 1"
b1010000 d
b1010000 4"
b10111 C
1K
1A
#4600
0K
0A
#4700
b111 Q
b111 8"
b111 Z
b111 #"
b111 R
0o
b1010100 W
b1010100 u
b1010100 ""
b1010100 e
b1010100 r
b0 \
b0 s
b0 ;"
b0 q
b0 t
b0 z
b1 V
b1 !"
b1 p
b1 {
1O
b1011000 `
b1011000 3"
b10100 T
b10100 %"
b10100 7"
b0 U
b0 &"
b0 6"
b10 m
b10 x
b10 *"
b10 n
b10 y
b10 +"
b11 l
b11 w
b11 )"
b1010100 j
b1010100 -"
b1001010 h
b1001010 /"
b1001010 k
b1001010 ,"
b101010000000010000000000000 g
b101010000000010000000000000 0"
b10000001010100 i
b10000001010100 ."
b101010000000010010100000011 f
b101010000000010010100000011 ("
b101010000000010010100000011 2"
b0 +
b1011000 _
b10000010101000 b
b10011110 c
b1010100 N
b1010100 1"
b1010100 d
b1010100 4"
b11000 C
1K
1A
#4800
0K
0A
#4900
b1011100 Q
b1011100 8"
b1011100 R
bx Z
bx #"
b11111111111111111111111111111111 W
b11111111111111111111111111111111 u
b11111111111111111111111111111111 ""
b0 a
b0 v
b1000 e
b1000 r
b1000 [
b1000 $"
b1000 :"
b111 \
b111 s
b111 ;"
b1 q
b1 t
b1 z
1~
1|
b0 V
b0 !"
b0 p
b0 {
0O
b1011100 `
b1011100 3"
b1000 ^
b1000 '"
b1000 5"
b1011 T
b1011 %"
b1011 7"
b1010 U
b1010 &"
b1010 6"
b0 m
b0 x
b0 *"
b0 n
b0 y
b0 +"
b1100011 l
b1100011 w
b1100011 )"
b1010000100000001010 i
b1010000100000001010 ."
b101101010000000000000000 g
b101101010000000000000000 0"
b1000 k
b1000 ,"
b1000 h
b1000 /"
b1011 j
b1011 -"
b101101010000010001100011 f
b101101010000010001100011 ("
b101101010000010001100011 2"
b111 +
b1011100 _
b1010000100001100010 b
b1100000 c
b1011000 N
b1011000 1"
b1011000 d
b1011000 4"
b11001 C
1K
1A
#5000
0K
0A
#5100
b1 e
b1 r
b1000 W
b1000 u
b1000 ""
b1000 Q
b1000 8"
bx [
bx $"
bx :"
b10 V
b10 !"
b1 p
b1 {
1O
b0 q
b0 t
b0 z
0~
0|
b1000 R
b1100000 `
b1100000 3"
b1010 ^
b1010 '"
b1010 5"
b1 T
b1 %"
b1 7"
b10011 l
b10011 w
b10011 )"
b1 j
b1 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b101010000000000000000 g
b101010000000000000000 0"
b1010000100000000000 i
b1010000100000000000 ."
b101010000010100010011 f
b101010000010100010011 ("
b101010000010100010011 2"
b1100000 _
b1010000100001011100 b
b1100110 c
b1011100 N
b1011100 1"
b1011100 d
b1011100 4"
b11010 C
1K
1A
#5200
0K
0A
#5300
1o
b1100100 Q
b1100100 8"
b1100100 R
b0 a
b0 v
b1000 e
b1000 r
b1000 [
b1000 $"
b1000 :"
b1 q
b1 t
b1 z
1|
b0 V
b0 !"
b0 p
b0 {
0O
b0 W
b0 u
b0 ""
b1100100 `
b1100100 3"
b11001 ^
b11001 '"
b11001 5"
b1011 T
b1011 %"
b1011 7"
b1111111 m
b1111111 x
b1111111 *"
b1 n
b1 y
b1 +"
b1100011 l
b1100011 w
b1100011 )"
b11111111111101010001111111101010 i
b11111111111101010001111111101010 ."
b11111110101101010001000000000000 g
b11111110101101010001000000000000 0"
b11111111111111111111111111111000 k
b11111111111111111111111111111000 ,"
b11111111111111111111111111111001 h
b11111111111111111111111111111001 /"
b11111111111111111111111111101011 j
b11111111111111111111111111101011 -"
b1000 \
b1000 s
b1000 ;"
b11111110101101010001110011100011 f
b11111110101101010001110011100011 ("
b11111110101101010001110011100011 2"
b1000 +
b1100100 _
b11111111111101010010000001001010 b
b1011000 c
b1100000 N
b1100000 1"
b1100000 d
b1100000 4"
b11011 C
1K
1A
#5400
0K
0A
#5500
b0 e
b0 r
1o
b0 W
b0 u
b0 ""
b10000000000000 Q
b10000000000000 8"
b0 [
b0 $"
b0 :"
b0 \
b0 s
b0 ;"
1S
1O
b0 q
b0 t
b0 z
0|
b1101000 R
b1101000 `
b1101000 3"
b1010 ^
b1010 '"
b1010 5"
b0 T
b0 %"
b0 7"
b0 U
b0 &"
b0 6"
b0 m
b0 x
b0 *"
b10 n
b10 y
b10 +"
b110111 l
b110111 w
b110111 )"
b0 j
b0 -"
b1010 h
b1010 /"
b1010 k
b1010 ,"
b10000000000000 g
b10000000000000 0"
b10000000000000 i
b10000000000000 ."
b10010100110111 f
b10010100110111 ("
b10010100110111 2"
b1101000 _
b10000001100100 b
b1101110 c
b1100100 N
b1100100 1"
b1100100 d
b1100100 4"
b11100 C
1K
1A
#5600
0K
0A
#5700
b10 a
b10 v
1}
0S
1O
b1101100 Q
b1101100 8"
b1101100 R
b1101000 `
b1101000 3"
b0 n
b0 y
b0 +"
b1101111 l
b1101111 w
b1101111 )"
b0 i
b0 ."
b0 g
b0 0"
b10101101111 f
b10101101111 ("
b10101101111 2"
b10000000000000 +
b1101100 _
b1101000 b
b1110010 c
b1101000 N
b1101000 1"
b1101000 d
b1101000 4"
b11101 C
1K
1A
#5800
0K
0A
#5900
b1101100 +
b11110 C
1K
1A
#6000
0K
0A
#6100
b1101100 +
b11111 C
1K
1A
#6200
0K
0A
#6300
b1101100 +
b100000 C
1K
1A
#6400
0K
0A
#6500
b1101100 +
b100001 C
1K
1A
#6600
0K
0A
#6700
b1101100 +
b100010 C
1K
1A
#6800
0K
0A
#6900
b1101100 +
b100011 C
1K
1A
#7000
0K
0A
#7100
b1101100 +
b100100 C
1K
1A
#7200
0K
0A
#7300
b1101100 +
b100101 C
1K
1A
#7400
0K
0A
#7500
b1101100 +
b100110 C
1K
1A
#7600
0K
0A
#7700
b1101100 +
b100111 C
1K
1A
#7800
0K
0A
#7900
b1101100 +
b101000 C
1K
1A
#8000
0K
0A
#8100
b1101100 +
b101001 C
1K
1A
#8200
0K
0A
#8300
b1101100 +
b101010 C
1K
1A
#8400
0K
0A
#8500
b1101100 +
b101011 C
1K
1A
#8600
0K
0A
#8700
b1101100 +
b101100 C
1K
1A
#8800
0K
0A
#8900
b1101100 +
b101101 C
1K
1A
#9000
0K
0A
#9100
b1101100 +
b101110 C
1K
1A
#9200
0K
0A
#9300
b1101100 +
b101111 C
1K
1A
#9400
0K
0A
#9500
b1101100 +
b110000 C
1K
1A
#9600
0K
0A
#9700
b1101100 +
b110001 C
1K
1A
#9800
0K
0A
#9900
b1101100 +
b110010 C
1K
1A
#10000
0K
0A
#10100
b1101100 +
b110011 C
1K
1A
#10200
0K
0A
#10300
b1101100 +
b110100 C
1K
1A
#10400
0K
0A
#10500
b1101100 +
b110101 C
1K
1A
#10600
0K
0A
#10700
b1101100 +
b110110 C
1K
1A
#10800
0K
0A
#10900
b1101100 +
b110111 C
1K
1A
#11000
0K
0A
#11100
b1101100 +
b111000 C
1K
1A
#11200
0K
0A
#11300
b1101100 +
b111001 C
1K
1A
#11400
0K
0A
#11500
b1101100 +
b111010 C
1K
1A
#11600
0K
0A
#11700
b1101100 +
b111011 C
1K
1A
#11800
0K
0A
#11900
b1101100 +
b111100 C
1K
1A
#12000
0K
0A
#12100
b1101100 +
b111101 C
1K
1A
#12200
0K
0A
#12300
b1101100 +
b111110 C
1K
1A
#12400
0K
0A
#12500
b1101100 +
b111111 C
1K
1A
#12600
0K
0A
#12700
b1101100 +
b1000000 C
1K
1A
#12800
0K
0A
#12900
b1101100 +
b1000001 C
1K
1A
#13000
0K
0A
#13100
b1101100 +
b1000010 C
1K
1A
#13200
0K
0A
#13300
b1101100 +
b1000011 C
1K
1A
#13400
0K
0A
#13500
b1101100 +
b1000100 C
1K
1A
#13600
0K
0A
#13700
b1101100 +
b1000101 C
1K
1A
#13800
0K
0A
#13900
b1101100 +
b1000110 C
1K
1A
#14000
0K
0A
#14100
b1101100 +
b1000111 C
1K
1A
#14200
0K
0A
#14300
b1101100 +
b1001000 C
1K
1A
#14400
0K
0A
#14500
b1101100 +
b1001001 C
1K
1A
#14600
0K
0A
#14700
b1101100 +
b1001010 C
1K
1A
#14800
0K
0A
#14900
b1101100 +
b1001011 C
1K
1A
#15000
0K
0A
#15100
b1101100 +
b1001100 C
1K
1A
#15200
0K
0A
#15300
b1101100 +
b1001101 C
1K
1A
#15400
0K
0A
#15500
b1101100 +
b1001110 C
1K
1A
#15600
0K
0A
#15700
b1101100 +
b1001111 C
1K
1A
#15800
0K
0A
#15900
b1101100 +
b1010000 C
1K
1A
#16000
0K
0A
#16100
b1101100 +
b1010001 C
1K
1A
#16200
0K
0A
#16300
b1101100 +
b1010010 C
1K
1A
#16400
0K
0A
#16500
b1101100 +
b1010011 C
1K
1A
#16600
0K
0A
#16700
b1101100 +
b1010100 C
1K
1A
#16800
0K
0A
#16900
b1101100 +
b1010101 C
1K
1A
#17000
0K
0A
#17100
b1101100 +
b1010110 C
1K
1A
#17200
0K
0A
#17300
b1101100 +
b1010111 C
1K
1A
#17400
0K
0A
#17500
b1101100 +
b1011000 C
1K
1A
#17600
0K
0A
#17700
b1101100 +
b1011001 C
1K
1A
#17800
0K
0A
#17900
b1101100 +
b1011010 C
1K
1A
#18000
0K
0A
#18100
b1101100 +
b1011011 C
1K
1A
#18200
0K
0A
#18300
b1101100 +
b1011100 C
1K
1A
#18400
0K
0A
#18500
b1101100 +
b1011101 C
1K
1A
#18600
0K
0A
#18700
b1101100 +
b1011110 C
1K
1A
#18800
0K
0A
#18900
b1101100 +
b1011111 C
1K
1A
#19000
0K
0A
#19100
b1101100 +
b1100000 C
1K
1A
#19200
0K
0A
#19300
b1101100 +
b1100001 C
1K
1A
#19400
0K
0A
#19500
b1101100 +
b1100010 C
1K
1A
#19600
0K
0A
#19700
b1101100 +
b1100011 C
1K
1A
#19800
0K
0A
#19900
b1101100 +
b1100100 C
1K
1A
#20000
0K
0A
#20100
b1101100 +
b1100101 C
1K
1A
#20200
0K
0A
#20300
b1101100 +
b1100110 C
1K
1A
#20400
0K
0A
#20500
b1101100 +
b1100111 C
1K
1A
#20600
0K
0A
#20700
b1101100 +
b1101000 C
1K
1A
#20800
0K
0A
#20900
b1101100 +
b1101001 C
1K
1A
#21000
0K
0A
#21100
b1101100 +
b1101010 C
1K
1A
#21200
0K
0A
#21300
b1101100 +
b1101011 C
1K
1A
#21400
0K
0A
#21500
b1101100 +
b1101100 C
1K
1A
#21600
0K
0A
#21700
b1101100 +
b1101101 C
1K
1A
#21800
0K
0A
#21900
b1101100 +
b1101110 C
1K
1A
#22000
0K
0A
#22100
b1101100 +
b1101111 C
1K
1A
#22200
0K
0A
#22300
b1101100 +
b1110000 C
1K
1A
#22400
0K
0A
#22500
b1101100 +
b1110001 C
1K
1A
#22600
0K
0A
#22700
b1101100 +
b1110010 C
1K
1A
#22800
0K
0A
#22900
b1101100 +
b1110011 C
1K
1A
#23000
0K
0A
#23100
b1101100 +
b1110100 C
1K
1A
#23200
0K
0A
#23300
b1101100 +
b1110101 C
1K
1A
#23400
0K
0A
#23500
b1101100 +
b1110110 C
1K
1A
#23600
0K
0A
#23700
b1101100 +
b1110111 C
1K
1A
#23800
0K
0A
#23900
b1101100 +
b1111000 C
1K
1A
#24000
0K
0A
#24100
